View(Smarket)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35, ]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
View(mtcars_train)
View(mtcars_test)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
View(glm.probs)
source("~/DSCI 512 Predictive Modelling/Week 3/Logistic.R", echo=TRUE)
View(glm.probs)
View(glm.fit)
View(mtcars)
typeof(mtcars$am)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
predictions = factor(predictions)
ConfMatrix <- confusionMatrix(data=predictions, reference = mtcars_test$am)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars)){
if (mtcars$am[i]=1) {
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars)){
if (mtcars$am[i]==1) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
predictions = factor(predictions)
ConfMatrix <- confusionMatrix(data=predictions, reference = mtcars_test$am)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars)){
if (mtcars$am[i]==1) {
mtcars$am[i]="manual"
}
else {
mtcars$am[i]="automatic"
}
}
predictions = factor(predictions)
ConfMatrix <- confusionMatrix(data=predictions, reference = mtcars_test$am)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars)){
if (mtcars$am[i]==1) {
mtcars$am[i]="manual"
}
else {
mtcars$am[i]="automatic"
}
}
predictions = factor(predictions)
ConfMatrix <- confusionMatrix(data=predictions, reference = mtcars_test$am)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]==1) {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
if (!require("leaps")) install.packages("leaps")
if (!require("leaps")) library(leaps)
if (!require("bestglm")) install.packages("bestglm")
if (!require("bestglm")) library(bestglm)
Xy = mtcars[, c("cyl", "disp", "hp", "wt", "qsec", "am", "gear", "carb", "mpg")]
Xy =as.data.frame(Xy)
lm.best = bestglm(Xy, IC = "BIC")
lm.best
lm.cv = bestglm(Xy, IC = "CV")
lm.cv
if (!require("leaps")) install.packages("leaps")
if (!require("leaps")) library(leaps)
if (!require("bestglm")) install.packages("bestglm")
if (!require("bestglm")) library(bestglm)
Xy = Bikes[, c("datetime", "season", "holiday", "weather", "temp", "atemp", "humidity", "windspeed", "casual", "registered", "count")]
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]==1) {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
knitr::opts_chunk$set(echo = TRUE)
Bikes <- read.csv("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/Bike.csv", header=T)
lm.fit = lm(count~season+holiday+workingday+weather+atemp+registered, data=Bikes)
summary(lm.fit)
if (!require("leaps")) install.packages("leaps")
if (!require("leaps")) library(leaps)
if (!require("bestglm")) install.packages("bestglm")
if (!require("bestglm")) library(bestglm)
Xy = Bikes[, c("datetime", "season", "holiday", "weather", "temp", "atemp", "humidity", "windspeed", "casual", "registered", "count")]
Xy =as.data.frame(Xy)
lm.best = bestglm(Xy, IC = "BIC")
Xy
if (!require("leaps")) install.packages("leaps")
if (!require("leaps")) library(leaps)
if (!require("bestglm")) install.packages("bestglm")
if (!require("bestglm")) library(bestglm)
Xy = Bikes[, c("season", "holiday", "weather", "temp", "atemp", "humidity", "windspeed", "casual", "registered", "count")]
Xy =as.data.frame(Xy)
lm.best = bestglm(Xy, IC = "BIC")
lm.best
View(Bikes)
lm.cv = bestglm(Xy, IC = "CV")
lm.cv
if (!require("MASS")) library(MASS)
full = lm(count ~ datetime+ season+ holiday+ workingday+ weather+ temp+ atemp+ humidity, windspeed, casual, registered, data = Bikes)
if (!require("MASS")) library(MASS)
full = lm(count ~ datetime+ season+ holiday+ workingday+ weather+ temp+ atemp+ humidity+ windspeed+ casual+ registered, data = Bikes)
lm.bwd = stepAIC(full, direction = "backward")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]==1) {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
Bikes <- read.csv("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/Bike.csv", header=T)
if (!require("leaps")) install.packages("leaps")
if (!require("leaps")) library(leaps)
if (!require("bestglm")) install.packages("bestglm")
if (!require("bestglm")) library(bestglm)
Xy = Bikes[, c("season", "holiday", "weather", "temp", "atemp", "humidity", "windspeed", "casual", "registered", "count")]
# had to remove datetime due to error, model only worked with numerics or factors
Xy =as.data.frame(Xy)
lm.best = bestglm(Xy, IC = "BIC")
lm.best
lm.cv = bestglm(Xy, IC = "CV")
lm.cv
View(ConfMatrix)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]=='1') {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
View(mtcars_test$am)
View(mtcars_test)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
View(mtcars_test)
typeof(mtcars$am)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
typeof(mtcars$am)
mtcars$am = factor(mtcars$am)
typeof(mtcars$am)
typeof(mtcars)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am <- as.factor(mtcars$am)
View(mtcars)
typeof(mtcars)
typeof(mtcars$am)
mtcars$am <- as.factor(mtcars$am)
typeof(mtcars$am)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]=='1') {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
View(mtcars_test)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]>0.5) {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
View(mtcars_test)
typeof(mtcars_test$am)
mtcars$am <- lappy(mtcars$am, as.factor())
library(dplyr)
mtcars$am <- lappy(mtcars$am, as.factor())
#load the Excel workbook into R
library(readxl)
Smarket <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/Smarket.xlsx")
View(Smarket)
#look at the columns of the data
names(Smarket)
#convert directon to factor
Smarket$Direction = factor(Smarket$Direction)
typeof(Smarket$Direction)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
table(predictions, mtcars_test$am)
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]==1) {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
mtcars <- read_excel("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 3/mtcars.xlsx")
mtcars$am = factor(mtcars$am)
View(mtcars)
typeof(mtcars)
mtcars_train = mtcars[1:35,]
mtcars_test = mtcars[36:41,]
glm.fit = glm(am~mpg+cyl+hp+wt,data=mtcars,family=binomial)
summary(glm.fit)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
predictions = predict(glm.fit, mtcars_test, type="response")
View(predictions)
for (i in 1:length(predictions)){
if (predictions[i]>0.5) {
predictions[i]="manual"
}
else {
predictions[i]="automatic"
}
}
table(predictions, mtcars_test$am)
for (i in 1:length(mtcars_test)){
if (mtcars_test$am[i]=='1') {
mtcars_test$am[i]="manual"
}
else {
mtcars_test$am[i]="automatic"
}
}
train_ctrl_method = trainControl(method="LOOCV")
model3 <-train(count~ season+holiday+workingday+weather+atempt+registered,
data=Bikes, trControl=train_control, method="lm")
train_ctrl_method = trainControl(method="LOOCV")
model3 <-train(count~ season+holiday+workingday+weather+atemp+registered,
data=Bikes, trControl=train_control, method="lm")
train_ctrl_method = trainControl(method="LOOCV")
model3 <-train(count~ season+holiday+workingday+weather+atemp+registered,
data=Bikes, trControl=train_ctrl_method, method="lm")
print(model3)
train_ctrl_method4 = trainControl(method="CV", number=10)
model4 <-train(count~ season+holiday+workingday+weather+atemp+registered,
data=Bikes, trControl=train_ctrl_method4, method="lm")
print(model4)
Boston <- read.csv("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 4/Bostonnew.csv", header=T)
Boston <- read.csv("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 4/Bostonnew.csv", header=T)
Boston <- read.csv("C:/Users/user1/OneDrive/Documents/DSCI 512 Predictive Modelling/Week 4/Boston.csv", header=T)
View(Boston)
lm2 = lm(nox ~ poly(dis,3), data = Boston)
summary(lm2)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
#must run CV on each model (model of degree 5, of degree 4, 3, & 2)
#going to use 10 fold cross validation
train_control = trainControl(method="CV", number=10)
#seeds allow reproducible results
set.seed(13)
cv5=train(nox~poly(dis,5),data=Boston,trControl=train_control, metnod="lm")
print(cv5)  #shows the test error (looking at RMSE)
cv4=train(nox~poly(dis,4),data=Boston,trControl=train_control, metnod="lm")
print(cv4)  #shows the test error (looking at RMSE)
cv3=train(nox~poly(dis,3),data=Boston,trControl=train_control, metnod="lm")
print(cv3)  #shows the test error (looking at RMSE)
cv2=train(nox~poly(dis,2),data=Boston,trControl=train_control, metnod="lm")
print(cv2)  #shows the test error (looking at RMSE)
if (!require("caret")) install.packages("caret")
if (!require("caret")) library(caret)
#must run CV on each model (model of degree 5, of degree 4, 3, & 2)
#going to use 10 fold cross validation
train_control = trainControl(method="CV", number=10)
#seeds allow reproducible results
set.seed(13)
cv5=train(nox~poly(dis,5),data=Boston,trControl=train_control, metnod="lm")
print(cv5)  #shows the test error (looking at RMSE)
cv4=train(nox~poly(dis,4),data=Boston,trControl=train_control, metnod="lm")
print(cv4)  #shows the test error (looking at RMSE)
cv3=train(nox~poly(dis,3),data=Boston,trControl=train_control, metnod="lm")
print(cv3)  #shows the test error (looking at RMSE)
cv2=train(nox~poly(dis,2),data=Boston,trControl=train_control, metnod="lm")
print(cv2)  #shows the test error (looking at RMSE)
if (!require("gam")) install.packages("gam")
if (!require("gam")) library(gam)
if (!require("gamclass")) install.packages("gamclass")
if (!require("gamclass")) library(gamclass)
# gam(arg1 is the forumula, arg2 is the dataset
# s indicates smoothing spline. also has 2 arguments. 1-predictor 2-degrees of freedom
gam4a=gam(nox~s(dis,3)+s(medv,2), data=Boston)
summary(gam4a)
gam4b=gam(nox~s(dis,2)+s(medv,1), data=Boston)
summary(gam4b)
anova(gam4a,gam4b)
